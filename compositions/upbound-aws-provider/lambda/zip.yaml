# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    awsblueprints.io/environment: dev
    awsblueprints.io/provider: aws
    awsblueprints.io/type: zip
  name: s3.lambda.aws.upbound.awsblueprints.io
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XLambdaFunction
  mode: Pipeline
  pipeline:
  - functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      patchSets:
      - name: common-fields
        patches:
        - fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          type: FromCompositeFieldPath
      resources:
      - base:
          apiVersion: iam.aws.upbound.io/v1beta1
          kind: Role
          spec:
            forProvider:
              assumeRolePolicy: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "lambda.amazonaws.com"
                      },
                      "Action": "sts:AssumeRole"
                    }
                  ]
                }
        name: function-role
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
          - string:
              fmt: '%s-role'
              type: Format
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: status.atProvider.arn
          toFieldPath: status.functionRoleArn
          type: ToCompositeFieldPath
        - fromFieldPath: status.atProvider.id
          toFieldPath: status.functionRoleName
          type: ToCompositeFieldPath
        - fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.tags
          policy:
            toFieldPath: MergeObjects
          toFieldPath: spec.forProvider.tags
          type: FromCompositeFieldPath
      - base:
          apiVersion: iam.aws.upbound.io/v1beta1
          kind: RolePolicyAttachment
          spec:
            forProvider:
              policyArn: arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
              roleSelector:
                matchControllerRef: true
        name: lambda-basic-policy-attachment
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: lambda.aws.upbound.io/v1beta1
          kind: Function
          spec:
            deletionPolicy: Delete
            forProvider:
              environment:
              - variables:
                  hardcoded: value
              packageType: Zip
              role: tbd
        name: function
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.memorySize
          toFieldPath: spec.forProvider.memorySize
          type: FromCompositeFieldPath
        - fromFieldPath: spec.timeout
          toFieldPath: spec.forProvider.timeout
          type: FromCompositeFieldPath
        - fromFieldPath: spec.runTime
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.runtime
          type: FromCompositeFieldPath
        - fromFieldPath: spec.handler
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.handler
          type: FromCompositeFieldPath
        - fromFieldPath: status.functionRoleArn
          toFieldPath: spec.forProvider.role
          type: FromCompositeFieldPath
        - fromFieldPath: spec.bucketName
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.s3Bucket
          type: FromCompositeFieldPath
        - fromFieldPath: spec.bucketKey
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.s3Key
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.envVariables
          policy:
            toFieldPath: MergeObjects
          toFieldPath: spec.forProvider.environment[0].variables
          type: FromCompositeFieldPath
        - fromFieldPath: status.atProvider.arn
          toFieldPath: status.functionArn
          type: ToCompositeFieldPath
        - fromFieldPath: status.atProvider.id
          toFieldPath: status.functionName
          type: ToCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.tags
          policy:
            toFieldPath: MergeObjects
          toFieldPath: spec.forProvider.tags
          type: FromCompositeFieldPath
    step: patch-and-transform
