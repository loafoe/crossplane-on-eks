# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/environment: dev
    awsblueprints.io/provider: aws
    kinesis.awsblueprints.io/app: firehose
    kinesis.awsblueprints.io/destination: s3
  name: firehose.upbound.awsblueprints.io
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XFirehoseApp
  mode: Pipeline
  pipeline:
  - functionRef:
      name: function-environment-configs
    input:
      apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
      kind: Input
      spec:
        environmentConfigs:
        - selector:
            matchLabels:
            - key: awsblueprints.io/environment
              valueFromFieldPath: spec.environmentConfigs
          type: Selector
    step: environment-configs
  - functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      patchSets:
      - name: common-fields-composition
        patches:
        - fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
          type: FromCompositeFieldPath
      - name: common-fields
        patches:
        - fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.tags
          policy:
            toFieldPath: MergeObjects
          toFieldPath: spec.forProvider.tags
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          type: FromCompositeFieldPath
      resources:
      - base:
          apiVersion: awsblueprints.io/v1alpha1
          kind: XLambdaFunction
          spec:
            compositionSelector:
              matchLabels:
                awsblueprints.io/environment: dev
                awsblueprints.io/provider: aws
                awsblueprints.io/type: zip
            handler: index.handler
            memorySize: 256
            runTime: python3.8
            timeout: 60
        name: lambda
        patches:
        - patchSetName: common-fields-composition
          type: PatchSet
        - fromFieldPath: spec.envVariables
          toFieldPath: spec.envVariables
          type: FromCompositeFieldPath
        - fromFieldPath: bucketName
          toFieldPath: spec.bucketName
          type: FromEnvironmentFieldPath
        - fromFieldPath: bucketKey
          toFieldPath: spec.bucketKey
          type: FromEnvironmentFieldPath
        - fromFieldPath: DYNATRACE_API_KEY
          toFieldPath: spec.envVariables.DYNATRACE_API_KEY
          type: FromEnvironmentFieldPath
        - fromFieldPath: DYNATRACE_ENV_URL
          toFieldPath: spec.envVariables.DYNATRACE_ENV_URL
          type: FromEnvironmentFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
          - string:
              fmt: '%s-processor'
              type: Format
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: status.functionRoleName
          toFieldPath: status.processorRoleName
          type: ToCompositeFieldPath
        - fromFieldPath: status.functionName
          toFieldPath: status.processorFuncName
          type: ToCompositeFieldPath
        - fromFieldPath: status.functionArn
          toFieldPath: status.processorFuncArn
          type: ToCompositeFieldPath
      - base:
          apiVersion: awsblueprints.io/v1alpha1
          kind: XObjectStorage
          metadata:
            name: standard-object-storage
          spec:
            compositionSelector:
              matchLabels:
                awsblueprints.io/environment: dev
                awsblueprints.io/provider: aws
                s3.awsblueprints.io/configuration: standard
        name: bucket
        patches:
        - patchSetName: common-fields-composition
          type: PatchSet
        - fromFieldPath: status.bucketName
          toFieldPath: status.bucketName
          type: ToCompositeFieldPath
        - fromFieldPath: status.bucketArn
          toFieldPath: status.bucketArn
          type: ToCompositeFieldPath
      - base:
          apiVersion: awsblueprints.io/v1alpha1
          kind: IAMPolicy
          spec:
            compositionSelector:
              matchLabels:
                awsblueprints.io/environment: dev
                awsblueprints.io/provider: aws
                iam.awsblueprints.io/policy-type: write
                iam.awsblueprints.io/service: cloudwatch
                iam.awsblueprints.io/service-type: metrics
            resourceArn: '*'
        name: lambda-metrics-write
        patches:
        - patchSetName: common-fields-composition
          type: PatchSet
        - fromFieldPath: status.processorRoleName
          toFieldPath: spec.roleName
          type: FromCompositeFieldPath
      - base:
          apiVersion: awsblueprints.io/v1alpha1
          kind: XKinesisFirehose
          metadata: null
          spec:
            forProvider:
              destination: extended_s3
              extendedS3Configuration:
              - bufferInterval: 60
                bufferSize: 5
                compressionFormat: GZIP
                prefix: success-
                processingConfiguration:
                - enabled: true
                  processors:
                  - parameters:
                    - parameterName: LambdaArn
                      parameterValue: TBD
                    type: Lambda
        name: kinesis-firehose
        patches:
        - patchSetName: common-fields-composition
          type: PatchSet
        - fromFieldPath: metadata.labels
          policy:
            toFieldPath: MergeObjects
          toFieldPath: metadata.labels
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
          type: FromCompositeFieldPath
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.name
          type: FromCompositeFieldPath
        - fromFieldPath: status.bucketName
          toFieldPath: spec.forProvider.extendedS3Configuration[0].bucketArnRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: status.kinesisRoleName
          toFieldPath: spec.forProvider.extendedS3Configuration[0].roleArnRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: status.processorFuncArn
          toFieldPath: spec.forProvider.extendedS3Configuration[0].processingConfiguration[0].processors[0].parameters[0].parameterValue
          type: FromCompositeFieldPath
        - fromFieldPath: status.kinesisRoleArn
          toFieldPath: status.kinesisRoleArn
          type: ToCompositeFieldPath
        - fromFieldPath: status.kinesisRoleName
          toFieldPath: status.kinesisRoleName
          type: ToCompositeFieldPath
        - fromFieldPath: status.kinesisName
          toFieldPath: status.kinesisName
          type: ToCompositeFieldPath
        - fromFieldPath: status.kinesisArn
          toFieldPath: status.kinesisArn
          type: ToCompositeFieldPath
      - base:
          apiVersion: awsblueprints.io/v1alpha1
          kind: IAMPolicy
          spec:
            compositionSelector:
              matchLabels:
                awsblueprints.io/environment: dev
                awsblueprints.io/provider: aws
                iam.awsblueprints.io/policy-type: write
                iam.awsblueprints.io/service: firehose-s3
        name: kinesis-write-s3
        patches:
        - patchSetName: common-fields-composition
          type: PatchSet
        - fromFieldPath: status.kinesisRoleName
          toFieldPath: spec.roleName
          type: FromCompositeFieldPath
        - fromFieldPath: status.bucketArn
          toFieldPath: spec.resourceArn
          type: FromCompositeFieldPath
      - base:
          apiVersion: awsblueprints.io/v1alpha1
          kind: IAMPolicy
          spec:
            compositionSelector:
              matchLabels:
                awsblueprints.io/environment: dev
                awsblueprints.io/provider: aws
                iam.awsblueprints.io/policy-type: invoke
                iam.awsblueprints.io/service: lambda
        name: kinesis-invoke-lambda
        patches:
        - patchSetName: common-fields-composition
          type: PatchSet
        - fromFieldPath: status.kinesisRoleName
          toFieldPath: spec.roleName
          type: FromCompositeFieldPath
        - fromFieldPath: status.processorFuncArn
          toFieldPath: spec.resourceArn
          type: FromCompositeFieldPath
      - base:
          apiVersion: iam.aws.upbound.io/v1beta1
          kind: Role
          metadata:
            labels:
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: firehose
          spec:
            forProvider: {}
        name: logs-write-firehose-role
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.assumeRolePolicy
          transforms:
          - string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "logs.%s.amazonaws.com"
                      },
                      "Action": "sts:AssumeRole"
                    }
                  ]
                }
              type: Format
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
          - string:
              fmt: '%s-firehose-write-role'
              type: Format
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: status.atProvider.arn
          toFieldPath: status.cloudwatchlogsRoleArn
          type: ToCompositeFieldPath
        - fromFieldPath: status.atProvider.id
          toFieldPath: status.cloudwatchlogsRoleName
          type: ToCompositeFieldPath
        - fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
          type: FromCompositeFieldPath
      - base:
          apiVersion: awsblueprints.io/v1alpha1
          kind: IAMPolicy
          spec:
            compositionSelector:
              matchLabels:
                awsblueprints.io/environment: dev
                awsblueprints.io/provider: aws
                iam.awsblueprints.io/policy-type: write
                iam.awsblueprints.io/service: firehose
        name: logs-write-firehose-policy
        patches:
        - patchSetName: common-fields-composition
          type: PatchSet
        - fromFieldPath: status.cloudwatchlogsRoleName
          toFieldPath: spec.roleName
          type: FromCompositeFieldPath
        - fromFieldPath: status.kinesisArn
          toFieldPath: spec.resourceArn
          type: FromCompositeFieldPath
    step: patch-and-transform
