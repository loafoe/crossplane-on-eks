---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: irsa.awsblueprints.io
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XIRSA
  mode: Pipeline
  pipeline:
  - functionRef:
      name: function-environment-configs
    input:
      apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
      kind: Input
      spec:
        environmentConfigs:
        - ref:
            name: cluster
          type: Reference
    step: environment-configs
  - functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      patchSets:
      - name: common-fields
        patches:
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
          type: FromCompositeFieldPath
      resources:
      - base:
          apiVersion: iam.aws.upbound.io/v1beta1
          kind: Role
          spec:
            forProvider:
              assumeRolePolicy: ""
        name: iam-role
        patches:
        - patchSetName: common-fields
          type: PatchSet
        - fromFieldPath: awsAccountID
          toFieldPath: metadata.annotations[crossplane.io/awsaccountid]
          type: FromEnvironmentFieldPath
        - fromFieldPath: metadata.annotations[crossplane.io/awsaccountid]
          policy:
            fromFieldPath: Required
          toFieldPath: status.awsAccountID
          type: ToCompositeFieldPath
        - fromFieldPath: eksOIDC
          toFieldPath: metadata.annotations[crossplane.io/eksoidc]
          type: FromEnvironmentFieldPath
        - fromFieldPath: metadata.annotations[crossplane.io/eksoidc]
          policy:
            fromFieldPath: Required
          toFieldPath: status.eksOIDC
          type: ToCompositeFieldPath
        - fromFieldPath: status.atProvider.arn
          toFieldPath: status.roleArn
          type: ToCompositeFieldPath
        - fromFieldPath: status.atProvider.arn
          toFieldPath: status.roleName
          transforms:
          - string:
              regexp:
                group: 2
                match: arn:aws:iam::(\d+):role/(.*)
              type: Regexp
            type: string
          type: ToCompositeFieldPath
        - fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
          type: FromCompositeFieldPath
        - combine:
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Federated": "arn:aws:iam::%s:oidc-provider/%s"
                      },
                      "Action": "sts:AssumeRoleWithWebIdentity",
                      "Condition": {
                        "StringEquals": {
                          "%s:aud": "sts.amazonaws.com",
                          "%s:sub": "system:serviceaccount:%s:%s"
                        }
                      }
                    }
                  ]
                }
            variables:
            - fromFieldPath: status.awsAccountID
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
            - fromFieldPath: spec.serviceAccountName
          toFieldPath: spec.forProvider.assumeRolePolicy
          type: CombineFromComposite
      - base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: ServiceAccount
                metadata:
                  annotations:
                    eks.amazonaws.com/role-arn: ""
                  name: ""
                  namespace: default
        name: service-account
        patches:
        - fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
          toFieldPath: spec.forProvider.manifest.metadata.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: spec.serviceAccountName
          toFieldPath: spec.forProvider.manifest.metadata.name
          type: FromCompositeFieldPath
        - fromFieldPath: status.roleArn
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.manifest.metadata.annotations[eks.amazonaws.com/role-arn]
          type: FromCompositeFieldPath
    step: patch-and-transform
